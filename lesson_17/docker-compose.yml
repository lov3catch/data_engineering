version: '3.8'

services:
  spark-master:
    image: bitnami/spark:3.4.1
    container_name: spark-master
    hostname: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_MASTER_PORT=7077
      - SPARK_MASTER_WEBUI_PORT=8080
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_DIRS=/tmp
      - SPARK_WORKER_CORES=2
      - SPARK_WORKER_MEMORY=1G
    ports:
      - "8080:8080"
      - "7077:7077"

  spark-worker:
    image: bitnami/spark:3.4.1
    container_name: spark-worker
    hostname: spark-worker
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_WEBUI_PORT=8081
      - SPARK_WORKER_CORES=2
      - SPARK_WORKER_MEMORY=1G
    ports:
      - "8081:8081"
    depends_on:
      - spark-master
    volumes:
      - .:/app
    working_dir: /app

  spark-submit:
    image: bitnami/spark:3.4.1
    container_name: spark-submit
    hostname: spark-submit
    environment:
      - SPARK_MODE=client
      - SPARK_MASTER_URL=spark://spark-master:7077
    depends_on:
      - spark-master
      - spark-worker
    volumes:
      - .:/app
    working_dir: /app

  #  pyspark:
  #    image: bitnami/spark:3.4.1
  #    container_name: pyspark
  #    hostname: pyspark
  #    environment:
  #      - SPARK_MODE=client
  #      - SPARK_MASTER_URL=spark://spark-master:7077
  #    volumes:
  #      - .:/app
  #    working_dir: /app
  #    depends_on:
  #      - spark-master
  #      - spark-worker

  #  notebook:
  #    image: jupyter/all-spark-notebook
  #    ports:
  #      - "8888:8888"
  #    volumes:
  #      - .:/src
  #    working_dir: /src
  #    depends_on:
  #      - spark-master
  #      - spark-worker
  #      - spark-submit
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    expose:
      - 5432
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  webserver:
    image: apache/airflow:2.9.0
    restart: always
    depends_on:
      - postgres
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__WEBSERVER__SECRET_KEY: 'qwerty'
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__FERNET_KEY: ''
    ports:
      - "8085:8080"
    command: webserver

  scheduler:
    image: apache/airflow:2.9.0
    restart: always
    depends_on:
      - postgres
      - webserver
    environment:
      AIRFLOW__CORE__DAG_RUN_CONF_OVERRIDES_PARAMS: False
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__FERNET_KEY: ''
      AIRFLOW__WEBSERVER__SECRET_KEY: 'qwerty'
    volumes:
      - ./dags:/opt/airflow/dags  # See: airflow/airflow.cfg in apache/airflow
    #      - ./../lesson_02/file_storage/raw/sales/:/home/airflow/sales/
    command: scheduler
volumes:
  postgres_data:
